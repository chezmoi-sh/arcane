---
# PVE Virtual Machine creation
#
# description: These tasks will configure the Kubernetes configuration on the
#              local machine to be able to interact with the new cluster.
- name: ðŸ”§ Configure the Kubernetes configuration
  hosts: all
  vars:
    kairos_cluster_name: maison.chezmoi.sh
    kubeconfig_user_name: "{{ kairos_cluster_name | regex_replace('\\.chezmoi\\.sh$', '') + '.root' }}"
  tags:
    - kubeconfig
  tasks:
    - name: ðŸ“¥ Fetch remote Kubernetes configuration
      ansible.builtin.slurp:
        src: /etc/rancher/k3s/k3s.yaml
      become_user: root
      become: true
      delay: 15
      register: kubeconfig_remote
      retries: 8
      until: kubeconfig_remote is succeeded

    - name: ðŸ”— Export Kubernetes cluster CA certificate
      delegate_to: localhost
      block:
        - name: ðŸ’¾ Save Kubernetes cluster certificate to temporary file
          ansible.builtin.tempfile:
            state: file
            suffix: .crt
          register: kubeconfig_cluster_certificate_authority_file

        - name: ðŸ’¾ Write Kubernetes cluster certificate to temporary file
          ansible.builtin.copy:
            content: >-
              {{
                kubeconfig_remote.content
                | b64decode
                | from_yaml
                | json_query('clusters[0].cluster."certificate-authority-data"')
                | b64decode
              }}
            dest: "{{ kubeconfig_cluster_certificate_authority_file.path }}"
            mode: "0600"
      rescue: []

    - name: ðŸ”— Export Kubernetes user certificates
      delegate_to: localhost
      block:
        - name: ðŸ’¾ Save Kubernetes user client certificate to temporary file
          ansible.builtin.tempfile:
            state: file
            suffix: .crt
          register: kubeconfig_user_client_certificate_file

        - name: ðŸ’¾ Write Kubernetes user client certificate to temporary file
          ansible.builtin.copy:
            content: >-
              {{
                kubeconfig_remote.content
                | b64decode
                | from_yaml
                | json_query('users[0].user."client-certificate-data"')
                | b64decode
              }}
            dest: "{{ kubeconfig_user_client_certificate_file.path }}"
            mode: "0600"

        - name: ðŸ’¾ Save Kubernetes user client key to temporary file
          ansible.builtin.tempfile:
            state: file
            suffix: .key
          register: kubeconfig_user_client_key_file

        - name: ðŸ’¾ Write Kubernetes user client key to temporary file
          ansible.builtin.copy:
            content: >-
              {{
                kubeconfig_remote.content
                | b64decode
                | from_yaml
                | json_query('users[0].user."client-key-data"')
                | b64decode
              }}
            dest: "{{ kubeconfig_user_client_key_file.path }}"
            mode: "0600"
      rescue: []

    - name: ðŸ”§ Update the local Kubernetes configuration
      environment:
        KUBECONFIG: "{{ lookup('ansible.builtin.env', 'KUBECONFIG') | mandatory(msg='KUBECONFIG is not defined') }}"
      delegate_to: localhost
      block:
        - name: ðŸ”§ Update the local Kubernetes configuration (cluster) # noqa no-changed-when
          ansible.builtin.command:
            cmd: >-
              kubectl config set-cluster "kubernetes.{{ kairos_cluster_name }}"
                --server="https://kubernetes.{{ kairos_cluster_name }}:6443"
                --certificate-authority="{{ kubeconfig_cluster_certificate_authority_file.path }}"
                --embed-certs

        - name: ðŸ”§ Update the local Kubernetes configuration (user) # noqa no-changed-when
          ansible.builtin.command:
            cmd: >-
              kubectl config set-credentials "{{ kubeconfig_user_name }}"
                --client-certificate="{{ kubeconfig_user_client_certificate_file.path }}"
                --client-key="{{ kubeconfig_user_client_key_file.path }}"
                --embed-certs

        - name: ðŸ”§ Update the local Kubernetes configuration (context) # noqa no-changed-when
          ansible.builtin.command:
            cmd: >-
              kubectl config set-context "kubernetes.{{ kairos_cluster_name }}"
              --cluster="kubernetes.{{ kairos_cluster_name }}"
              --user="{{ kubeconfig_user_name }}"
              --namespace=default

        - name: ðŸ”§ Set the current Kubernetes context to 'kubernetes.{{ kairos_cluster_name }}' # noqa no-changed-when
          ansible.builtin.command:
            cmd: kubectl config use-context "kubernetes.{{ kairos_cluster_name }}"
      rescue: []

    - name: ðŸ§ª Fetch the Kubernetes cluster information
      kubernetes.core.k8s_cluster_info:
        kubeconfig: "{{ lookup('ansible.builtin.env', 'KUBECONFIG') | mandatory(msg='KUBECONFIG is not defined') }}"
      delegate_to: localhost
