version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
    type: controlplane # Defines the role of the machine within the cluster.
    token: i4cmv2.y1fyi2gi05b23m6t # The `token` is used by a machine to join the PKI of the cluster.
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBa3QzNTM2RnRqa0FpSHZNVzZ1U2E4VEFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qVXdOakUzTWpFME16STRXaGNOTXpVd05qRTFNakUwTXpJNFdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUVlYWZXWjNRdTMvNHgwSFBma3FzR25mNjFLMFZqMUlJZWpECmkvaUJaWnFlbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkFlVUxXOS81dm0wcFNiQQpmZFc4ZkxuTlVQalJNQVVHQXl0bGNBTkJBQWlDSmVpeUNlM1lqWUdTWTZKSlFUejdFNE1mZFErTy9BTzZNZHhoClBVTmJIU3R3SFFlUG9LSkQyWFFLckpidmozWnZRQUZzdFh0SHlDM2ZPSlRrcUE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTWFKOWdSVldIYkpjMEp4dyt0VVFYNjFwTWFsalFPZ1AvOXIzbjJmb083VwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10

    # Used to provide additional options to the kubelet.
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.33.1 # The `image` field is an optional reference to an alternative kubelet image.
        # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        clusterDNS:
            - 10.96.0.10
        # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: "true"
        # The `extraConfig` field is used to provide kubelet configuration overrides.
        extraConfig:
            featureGates:
                UserNamespacesPodSecurityStandards: true
                UserNamespacesSupport: true
        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider

        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        hostname: sof-akn-01 # Used to statically set the hostname for the machine.
        
        # # `interfaces` is used to define the network interface configuration.
        # interfaces:
        #     - interface: enp0s1 # The interface name.
        #       # Assigns static IP addresses to the interface.
        #       addresses:
        #         - 192.168.2.0/24
        #       # A list of routes associated with the interface.
        #       routes:
        #         - network: 0.0.0.0/0 # The route's network (destination).
        #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
        #           metric: 1024 # The optional metric for the route.
        #       mtu: 1500 # The interface's MTU.
        #       
        #       # # Picks a network device using the selector.

        #       # # select a device with bus prefix 00:*.
        #       # deviceSelector:
        #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
        #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
        #       # deviceSelector:
        #       #     hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
        #       #     driver: virtio_net # Kernel driver, supports matching by wildcard.
        #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
        #       # deviceSelector:
        #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
        #       #     - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
        #       #       driver: virtio_net # Kernel driver, supports matching by wildcard.

        #       # # Bond specific options.
        #       # bond:
        #       #     # The interfaces that make up the bond.
        #       #     interfaces:
        #       #         - enp2s0
        #       #         - enp2s1
        #       #     # Picks a network device using the selector.
        #       #     deviceSelectors:
        #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
        #       #         - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
        #       #           driver: virtio_net # Kernel driver, supports matching by wildcard.
        #       #     mode: 802.3ad # A bond option.
        #       #     lacpRate: fast # A bond option.

        #       # # Bridge specific options.
        #       # bridge:
        #       #     # The interfaces that make up the bridge.
        #       #     interfaces:
        #       #         - enxda4042ca9a51
        #       #         - enxae2a6774c259
        #       #     # Enable STP on this bridge.
        #       #     stp:
        #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

        #       # # Configure this device as a bridge port.
        #       # bridgePort:
        #       #     master: br0 # The name of the bridge master interface

        #       # # Indicates if DHCP should be used to configure the interface.
        #       # dhcp: true

        #       # # DHCP specific options.
        #       # dhcpOptions:
        #       #     routeMetric: 1024 # The priority of all routes received via DHCP.

        #       # # Wireguard specific configuration.

        #       # # wireguard server example
        #       # wireguard:
        #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
        #       #     listenPort: 51111 # Specifies a device's listening port.
        #       #     # Specifies a list of peer configurations to apply to a device.
        #       #     peers:
        #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
        #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
        #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
        #       #           allowedIPs:
        #       #             - 192.168.1.0/24
        #       # # wireguard peer example
        #       # wireguard:
        #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
        #       #     # Specifies a list of peer configurations to apply to a device.
        #       #     peers:
        #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
        #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
        #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
        #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
        #       #           allowedIPs:
        #       #             - 192.168.1.0/24

        #       # # Virtual (shared) IP address configuration.

        #       # # layer2 vip example
        #       # vip:
        #       #     ip: 172.16.199.55 # Specifies the IP address to be used.

        # # Used to statically set the nameservers for the machine.
        # nameservers:
        #     - 8.8.8.8
        #     - 1.1.1.1

        # # Used to statically set arbitrary search domains.
        # searchDomains:
        #     - example.org
        #     - example.com

        # # Allows for extra entries to be added to the `/etc/hosts` file
        # extraHostEntries:
        #     - ip: 192.168.1.100 # The IP of the host.
        #       # The host alias.
        #       aliases:
        #         - example
        #         - example.domain.tld

        # # Configures KubeSpan feature.
        # kubespan:
        #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        disk: /dev/sda # The disk used for installations.
        # Look up disk using disk attributes like model, size, serial and others.
        diskSelector:
            model: QEMU HARDDISK # Disk model `/sys/block/<dev>/device/model`.
            type: hdd # Disk Type.
            
            # # Disk size.

            # # Select a disk which size is equal to 4GB.
            # size: 4GB
            # # Select a disk which size is greater than 1TB.
            # size: '> 1TB'
            # # Select a disk which size is less or equal than 2TB.
            # size: <= 2TB

            # # Disk bus path.
            # busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0
            # busPath: /pci0000:00/*
        image: factory.talos.dev/nocloud-installer-secureboot/88d1f7a5c4f1d3aba7df787c448c1d3d008ed29cfb34af53fa0df4336a56040b:v1.10.4 # Allows for supplying the image used to perform the installation.
        wipe: true # Indicates if the installation disk should be wiped at installation time.
        
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
    # Used to configure the machine's sysctls.
    sysctls:
        user.max_user_namespaces: "11255"
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/

    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.

    # Features describe individual Talos features that can be switched on or off.
    features:
        rbac: true # Enable role-based access control (RBAC).
        stableHostname: true # Enable stable default hostname.
        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            enabled: true # Enable KubePrism support - will start local load balancing proxy.
            port: 7445 # KubePrism port.
        # Configures host DNS caching resolver.
        hostDNS:
            enabled: true # Enable host DNS caching resolver.
            forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
            resolveMemberNames: true # Resolve member hostnames using the host DNS resolver.
        # Enable Image Cache feature.
        imageCache:
            localEnabled: false # Enable local image cache.
        
        # # Configure Talos API access from Kubernetes pods.
        # kubernetesTalosAPIAccess:
        #     enabled: true # Enable Talos API access from Kubernetes pods.
        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
        #     allowedRoles:
        #         - os:reader
        #     # The list of Kubernetes namespaces Talos API access is available from.
        #     allowedKubernetesNamespaces:
        #         - kube-system
    # Configures the node labels for the machine.
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
    
    # # Provides machine specific control plane configuration options.

    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.

    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # Allows the addition of user specified files.

    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use

    # # The `env` field allows for the addition of environment variables.

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Used to configure the machine's time settings.

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

    # # Used to configure the machine's sysfs.

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64

    #         # # Defines the encryption sector size.
    #         # blockSize: 4096

    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue

    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.

    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.

    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # Override (patch) settings in the default OCI runtime spec for CRI containers.

    # # override default open file limit
    # baseRuntimeSpecOverrides:
    #     process:
    #         rlimits:
    #             - hard: 1024
    #               soft: 1024
    #               type: RLIMIT_NOFILE

    # # Configures the node annotations for the machine.

    # # node annotations example.
    # nodeAnnotations:
    #     customer.io/rack: r13a25

    # # Configures the node taints for the machine. Effect is optional.

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    id: aislMQ4FDiwte7KtIvpJj08TW3w_dBBYDJ9hGjm-KNU= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    secret: tyImVLU9idimGYhov0e5lH5akADG9EPzGPfyxZxo0bA= # Shared secret of cluster (base64 encoded random 32 bytes).
    # Provides control plane specific configuration options.
    controlPlane:
        endpoint: https://kubernetes.sof.akn.chezmoi.sh:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    clusterName: sof.akn # Configures the cluster's name.
    # Provides cluster specific network configuration options.
    network:
        # The CNI used.
        cni:
            name: custom # Name of CNI to use.
            # URLs containing manifests to apply for the CNI.
            urls:
                - https://raw.githubusercontent.com/chezmoi-sh/arcane/refs/heads/main/projects/amiya.akn/docs/bootstrap/talos/manifests/cilium~1.17.3.yaml
        dnsDomain: cluster.local # The domain used by Kubernetes DNS.
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
    token: 6b41xu.d3y1el05187y92k8 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    secretboxEncryptionSecret: Dp5SOxTicVtkEgUi3VbkqMJAflLb9go4UpwZshVh7ys= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpekNDQVRDZ0F3SUJBZ0lSQUxnQk12RjZST1Y4Tnd5V0ZoV2ZuV0F3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOVEEyTVRjeU1UUXpNamhhRncwek5UQTJNVFV5TVRRegpNamhhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVQxcXowdC9GOXdCeHF6K0ZPTTYwcktIU0gzQktZYWc4TmpnQ0tQWERQNXJ6RmNoVFBoRWVLa1I3V0MKa0RqY0ZvM0d6Z3YvK1dOS0dsTXJzNW0xWERLeG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGTVp3b1pzMnFHMTV5d2YzNERqK0VTS1RxZUtqTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFDOE1oQU4KNjBJUUtKaExNT09pQlA1dzhTZjJUY05aWEUzQWlPMHhLWkdPM3dJaEFMaisxU0tkRkNtdUl0RS96QjB0MU5FYgpnVTgvODdkbmxCc1ZqcG1DOXpyZwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU1SbGJ0TzZnRUplQmdpcVMzWU11T3RZVUlscy9UbXVISklUY1lFc3RsN0dvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFOWFzOUxmeGZjQWNhcy9oVGpPdEt5aDBoOXdTbUdvUERZNEFpajF3eithOHhYSVV6NFJIaQpwRWUxZ3BBNDNCYU54czRMLy9salNocFRLN09adFZ3eXNRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQUttSlZqaFJObGVzcVVndkc3VjNwd0V3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU5UQTJNVGN5TVRRek1qaGFGdzB6TlRBMk1UVXlNVFF6TWpoYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVJWbnlkSGNIVmZnQlVSZXJ2dlhpbWRad2RhWjJzL0pWeDU1ZWlGS25MWnk4MHg3YmVhCjJ2Zk1GYTlreVpqVlRidE9ZdGdMT2hEMW1MK0tLWmxRMFVjQm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGS2VKMFEza0ovL0wza0xselltRlZ2RzNFUXpKTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklRQ0JVM21vcC84RjdIYkZhelA3WUNNVjNuYkJDVjlBUEFQNlpJUE9QcjFPL3dJZ0FaU3ZYRVJzWlk5Rzk2YjAKQ01CVUlMTlJBaVdzR3lQdktBMmt6NmlYMmVJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUpOUFpaZHBDWTlGSkFqaU56Ym16QjgwalpHRDAyc0JUb0MrKzhSQTNGOXFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFVlo4blIzQjFYNEFWRVhxNzcxNHBuV2NIV21kclB5VmNlZVhvaFNweTJjdk5NZTIzbXRyMwp6Qld2Wk1tWTFVMjdUbUxZQ3pvUTlaaS9paW1aVU5GSEFRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBdjJIaWNFMUlMRldHYU1ZYS8xUUtMcnRIbFJETTgwYUpsMzRJYlV6MjVZeHdMeVBCCk5la1pyOGppUlJWUG5JSVRGckZUbHpSekpaWHMvV2RjVTlRcHNOUFphbXRwdjJLRDRyV0FhZ2VGSHhzZ3ZGTDIKU01KeURmYW1MOHhsL1VicUZMbkNSSTRJMlF6Rnk1aE5Yeis2N1FGeDZldTBsN3VZYjlXOHdXUmxiYWRUY1o5egpjaHBLbUxyYUlPWXV2eDNuRjRBNXU5VG1XSkFVKy9ZUC9wcjRGQld1MVlYNlFPd09xUUNvandZWW1DZzVkVUpmCkNnZDV3MkV5OS85RVFOSWtwLzI5d0pCNXJwVER5VjVROXloTU5DRFJJbXk0UVpXakNBcHRsMEJKQUFEVjZTYVUKMFNNN0xCRjVNVWwrcHdBT0pCalJ2aC96cmdGRUlxUEdBb0hiaEh1WnMweEFVMExLcEpMTTlrUGxaOG9qM3RZMworUzJuVExCZ2xoTEhob2VRL2FtVUdOdUJiaTUzcGJsT3ZqTEVuUVU4Z2c3WEtqUERJY2YzSDVKWXQrQk5Kd2ZTClUxVm1lVWRDN2k1UEVnTDNEc1V6Vk80OXJ2T3RHNFUrTDZBa3NmVDBaU05xWmowL0NXYzZzc1Eza21hMU53VS8KVGZ0bGgwTUEwbzZDVXFjZkN4WmNmTWoyc05NaW01UmtPcWxKSGZGTFY1R1orRkFkMVU3WjllemtwOWo4TXFkTwpRRTBmMXRjOTFXdlVEZkE0MEprSS9rbTQ1OEVoeWI2ZEo5NGJZL0Q3Nk1nTk11MWNuK0pUY0FGZGhldjRRR1d6CmhxYXNHTitiVDRIUzI5MnhMcC91OEZGNG5ydENKeUx2MkJMZmwxaEVpRWZMUzFaZmkyekd4WmZkVkNrQ0F3RUEKQVFLQ0FnQmFaZlg3YmNXbGkxQk50U1dUYlRMU0dBd2IwUys5eVplOFF2L2dBUGF1UHNQT3dHakcraS96NUVOYwp0bEJBY1FCck81OXNVSTRETnVvV1YvZzRjSUt3ejZCbXNBM25KTFYvSkpSZmdPWFVaNC95NUkwSW1UQWVnRjdIClBSai9wYnR6eHJxSWZ6NldwMzNXU1Q1aXUwdWtINGFiSTRiT0ZRSlA4UG1UcjhScEl4dzdFMElJcDNxTTRkV2UKckp0d0VzUFJTZlA3VVBqczVFSEZNZGtrUGpibjVjWUxmWmxUaVN6emp5Z1BScVhmV1VDcXJvc054Ykl5STN0Ygp3T3VRWXJLRjEwa0Y2RGhSeWxzZ2hyaGZ4bDBZVWxmMmxyd0IzcGgvZDgyRUlBMWJQd25MY3puZi8zQTN4SmttCk9yemtUUlpnM29oVDhldThTVVRSeCtJRDFTckdlOVVKN1ZIbEhQb2JjZzZGeVBxVWJpZnV6WU9ZVXcrNVNXdi8KMUYvQUpZWExNY0U2Rk1ZR3dFTmprdWQ2RFdveksxczRHZFVNODg2eUd4VjYwcTFvcjVkdVdENXk2d1hPeUtIbQpVc3NVT2xXZGYvMVhUQko3NHU2UFZGWHN1bXZrSnJKQi9mNytCSkpoMzB2ZmRSZGNpZXBqWDJOWDhIbTh1SktsCjFvcXlWZ0pWeEFZWUY3Ny9yNnl4Qmd2OWlja1hFbVdNV2tCbFdiNHlqQkZ1bGh0TU9vaDNxY283aTR2c0RtVDUKckpwYk9Zc2tTd0hIdlVxQXh5bzl0K2JWNFJ1S3dYNGhlZnJ3a3A5akRnZHlpRGs3d0hhK0FvY1EvdTJFQkUvbQpEKzE4Z2NkK3Ardnl1enR2d3BRZjZXdEVJay83VVhrQVN2MGw0UGVubUhZM0RrcXZzUUtDQVFFQTBNaE9yNnZzClhTWENIeHdzaUR6Mlh4MzZscGErV2VQWnNYZ2pDQlhMM2N5aVNpZy9idDMxc2tpbW85dXhIN0ZVTEIrWDJSQTgKSmx1d3FWWVZXVGl2WWdHb1JDNGVaclpic05mQ1Y1ZnJoczRYYXpmd0ltTlBPaU9LWnB6aVQ5aVN5R2dibWhBTQpIMjNoY0Y3QnR1Qm9NOUhpTENYU09IZDZLays3L1pjcW5qdHRpdWMyaEJXbytBT01zeW5lLzU5Z3BIRmRPTDJSCmxwY2RiWnRQZkQ0L1dHNmVYcW9Eei9Wdi9iMWZIbTM0MFhJbXEvSHpvZVhKSzg5b1p3ZXlUT3dQM2JRVldiVWEKOWE2T2VZYkFHSTh4bXA5ZjIrbFFOMkI3Qk5IK2hNWWg1WFJmdi9iaEdnZnNsVkZJdkxSclhhWi91S1kvQWRXaQpwVXBTTDNUaFJ1elZPd0tDQVFFQTZxb3QrblhBSHZvUFgwT3hzRWFWUlJRQ0xGdWRyZEk3bEI0Z2FDV0FpRTdTCkVJNlZkbys1N2c2KzI2cjY2QnAxT2o4d2ZxUWJoM2doaktkb2tGSHNBUDFwaDdJQittelJTV2VUQWM1WTBlTFcKOUNRRldlRmpGazNvQnlJcmVJUThaUWNCWTRDTzhwUkZLTXRZblhuellEK2NuWUJkaDA2cVp1M21uOTJ2bG1WOAplcWV2cldJK0psK1hBdHh6R2VtQ1V2L0R4S0IzREZQR0hrYXFuS0U2Z2NWdWpnYXJRYWtaTVl6VlN2TmRmNVJOClVkVUdvS2s1WFJoaWxOZUpha1dmKzhsNHl3ZFRmMFdmZ1lXcFZGQzZVZXdHcXdhTmxQd2kwV1NCSHNMYllzQ28KZ2dDaldoOVVVYU8xR28yKzluekNSR0ladlJEZ1AwK1NGdDNyam10VjZ3S0NBUUI2bDhPc1gxVXc5TVRobzVkNgpmK0ZpeEtXcDJ1WDJ2bFhMWVhHZ2c3dnJod2NjYURtbkRlb0JQNnVwdDR4dndaNWRNa2ZsaXlUbW1SeElzbVZpCnVHZ3pNaW50cnU3bS9Oa21JK3JYcURzQ011MkpaWlU1ZS9xL2RyTUR3Y2NaZjEvaEVWQnp6RXh5QUFGS0REbk8KK2tIMWU1NUVzZ2lZWTM5MmJNOUQvb2xsMUJ0a1hwT2lSMTJxRTl1QU1Hdml5V0RqN2pVQTVqOGduNmNGL3haVApLL0hpS1VJUTc5L0JNcXNKNFRLREdhdnF3QTU1RkY4c2gxTHl5SnpUTXErOWZ6ZHB4UjVzU0cyR0tYTTdaS1pUClJYR3BDMEFzVHZsdEt0ZlJZc1VDalp6RnNPbXdQSFM4NWo1REJ6R2dySWdHdTRkdmt4NllJeXVYeHVZdk80QTAKTjBpVkFvSUJBUURCOXF4T2EybkRzUGxueXJKaWU5VUI1Z250MUVRKzJwaTRVemFDSHcxZ25aWHdiWXFKRnorZAp6NzVlSDdPSWllWC9vUjlhYmhiN0lJYktsYzFPRFFpL3dMYXJuSzBaNnp3S0tueE9iOXJta1ZNUE5YN2V6ZmR6CkJpNFZSMThiSEdJM04xVWtnNnlrUVgzd3ZET2c1cDRPSGtZN3dWQ05lSzVNcWJPSXpGcElPOVpxSTVTSUFiNVIKUlkyeXBialY0RGNDbDdtZkd1dUwydXJWTjUvcUd6SWE5YS90NFFGSklwWmFhSWdjalkvbzFoSWE0N080dEdkZgoxYm9XUVJtcUo2YVhIZTZrRW9nbm1NckE2bFFPQnpRYVpyY1VRalJnd3crY2VEQnAxckl6cS84Y2haNS83WWxxCmVhQkdOSWQxZ2FXcGxGU2wrLzcvRmF3eERubVhuSXpGQW9JQkFEc3FQRVZONm5xczB2MzYwNC8yODI2WGc2dmQKajRJQURoc2xOOEp6ejQyR3huTFNZUjlQQ08wV3hJMTIySlNDNEtNT09sSzlxdHQ2d2JvR3llYzBadTVFRGJGdwpqQTBDT1VmUEFSY0xtWGFTRWtrNlExd2JkZUdoTVhBSW16VzZVa3lKZFl1TEFMMTc2NFhVcmd1RDVmWHpoNGtzClRVTjJLOVhGMDBSMGJaR3RLS2RKT0ZOdlE2NXdGNWxrdXlIUlNMTnBxelFHMzFXYkFrVWpUajdGZFQ5TGF4T2kKeFZad2tvdDI4aWl2TUo3R1R3WXZ1M0pBOHVNeWZnT3YwOFFSNXJ0NHF3TVdoSU9VbmxWU3dXSVJRTFRndjA5agpQZmJNUHZKU2J3MGR2VGhnbkhTL2hYUkU1UDNha0tmVXlJMlFzUFZsaEZCZnQrem5aRUFzVVdzdGpBZz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
    # API server specific configuration options.
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.33.1 # The container image used in the API server manifest.
        # Extra arguments to supply to the API server.
        extraArgs:
            feature-gates: UserNamespacesSupport=true,UserNamespacesPodSecurityStandards=true
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - kubernetes.sof.akn.chezmoi.sh
        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
        # Configure the API server admission plugins.
        admissionControl:
            - name: PodSecurity # Name is the name of the admission controller.
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
        
        # # Configure the API server authorization config. Node and RBAC authorizers are always added irrespective of the configuration.
        # authorizationConfig:
        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
        #       name: webhook # Name is used to describe the authorizer.
        #       # webhook is the configuration for the webhook authorizer.
        #       webhook:
        #         connectionInfo:
        #             type: InClusterConfig
        #         failurePolicy: Deny
        #         matchConditionSubjectAccessReviewVersion: v1
        #         matchConditions:
        #             - expression: has(request.resourceAttributes)
        #             - expression: '!(\''system:serviceaccounts:kube-system\'' in request.groups)'
        #         subjectAccessReviewVersion: v1
        #         timeout: 3s
        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
        #       name: in-cluster-authorizer # Name is used to describe the authorizer.
        #       # webhook is the configuration for the webhook authorizer.
        #       webhook:
        #         connectionInfo:
        #             type: InClusterConfig
        #         failurePolicy: NoOpinion
        #         matchConditionSubjectAccessReviewVersion: v1
        #         subjectAccessReviewVersion: v1
        #         timeout: 3s
    # Controller manager server specific configuration options.
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.33.1 # The container image used in the controller manager manifest.
    # Kube-proxy server-specific configuration options
    proxy:
        disabled: true # Disable kube-proxy deployment on cluster bootstrap.
        image: registry.k8s.io/kube-proxy:v1.33.1 # The container image used in the kube-proxy manifest.
    # Scheduler server specific configuration options.
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.33.1 # The container image used in the scheduler manifest.
    # Configures cluster member discovery.
    discovery:
        enabled: true # Enable the cluster membership discovery feature.
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                disabled: true # Disable Kubernetes discovery registry.
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQU44QUpkY0xxZ3NDR2F0bURHL2x0dGN3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TlRBMk1UY3lNVFF6TWpoYUZ3MHpOVEEyTVRVeU1UUXpNamhhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFROXVHQVhYczdOCjhTeXBLMnVIVFdQbnhpUU5TYVJ0am1LS0h2SG1vMzFYSWRQMXNDUmN4YUNFRmN2dG1QOXYrQ1pyVzJyWnBKLzkKTVdicW5MSHRLU2ZPbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkJxTElIY25ZRjE4CjhvYW1KbmpYN1RJdUpGaGFNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNGSW8vTitSaTZra0FWd1NKSEZ0UksKcE9Ta09GTUwzNDZ4WFJvV3lyZFRHUUlnUzU0U1BITzA3MzdFbW1rbTZhbWJsWkp2TmsvUG9BUk9LZTRMYVBCbwpxc289Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU93SVpNZFBpVlN2Z2dCcitqc1N6ZHlSdmV4TXJlMHQzUm44L2gyRWplcUZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUGJoZ0YxN096ZkVzcVN0cmgwMWo1OFlrRFVta2JZNWlpaDd4NXFOOVZ5SFQ5YkFrWE1XZwpoQlhMN1pqL2IvZ21hMXRxMmFTZi9URm02cHl4N1NrbnpnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        
        # # The container image used to create the etcd service.
        # image: gcr.io/etcd-development/etcd:v3.5.21

        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
        # advertisedSubnets:
        #     - 10.0.0.0/8
    # Core DNS specific configuration options.
    coreDNS:
        disabled: true # Disable coredns deployment on cluster bootstrap.
    # A list of urls that point to additional manifests.
    extraManifests:
        - https://raw.githubusercontent.com/chezmoi-sh/arcane/refs/heads/main/projects/amiya.akn/docs/bootstrap/talos/manifests/coredns~v1.12.1.yaml
        - https://raw.githubusercontent.com/chezmoi-sh/arcane/refs/heads/main/projects/amiya.akn/docs/bootstrap/talos/manifests/kubelet-serving-cert-approver~0.9.1.yaml
        - https://raw.githubusercontent.com/chezmoi-sh/arcane/refs/heads/main/projects/amiya.akn/docs/bootstrap/talos/manifests/metrics-server~0.7.2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    allowSchedulingOnControlPlanes: true # Allows running workload on control-plane nodes.
    
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).

    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
---
apiVersion: v1alpha1
kind: VolumeConfig
name: EPHEMERAL # Name of the volume.
# The provisioning describes how the volume is provisioned.
provisioning:
    # The disk selector expression.
    diskSelector:
        match: system_disk # The Common Expression Language (CEL) expression to match the disk.
    maxSize: 12GiB # The maximum size of the volume, if not specified the volume can grow to the size of the
    
    # # The minimum size of the volume.
    # minSize: 2.5GiB
---
apiVersion: v1alpha1
kind: VolumeConfig
name: IMAGECACHE # Name of the volume.
# The provisioning describes how the volume is provisioned.
provisioning:
    # The disk selector expression.
    diskSelector:
        match: system_disk # The Common Expression Language (CEL) expression to match the disk.
    maxSize: 12GiB # The maximum size of the volume, if not specified the volume can grow to the size of the
    
    # # The minimum size of the volume.
    # minSize: 2.5GiB
---
apiVersion: v1alpha1
kind: UserVolumeConfig
name: longhorn # Name of the volume.
# The provisioning describes how the volume is provisioned.
provisioning:
    # The disk selector expression.
    diskSelector:
        match: disk.transport == "virtio" && !system_disk # The Common Expression Language (CEL) expression to match the disk.
    grow: true # Should the volume grow to the size of the disk (if possible).
    minSize: 16GiB # The minimum size of the volume.
    
    # # The maximum size of the volume, if not specified the volume can grow to the size of the
    # maxSize: 50GiB
# The filesystem describes how the volume is formatted.
filesystem:
    type: xfs # Filesystem type. Default is `xfs`.

# # The encryption describes how the volume is encrypted.
# encryption:
#     provider: luks2 # Encryption provider to use for the encryption.
#     # Defines the encryption keys generation and storage method.
#     keys:
#         - slot: 0 # Key slot number for LUKS2 encryption.
#           # Key which value is stored in the configuration file.
#           static:
#             passphrase: exampleKey # Defines the static passphrase value.
#           
#           # # KMS managed encryption key.
#           # kms:
#           #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
#         - slot: 1 # Key slot number for LUKS2 encryption.
#           # KMS managed encryption key.
#           kms:
#             endpoint: https://example-kms-endpoint.com # KMS endpoint to Seal/Unseal the key.
#     cipher: aes-xts-plain64 # Cipher to use for the encryption. Depends on the encryption provider.
#     blockSize: 4096 # Defines the encryption sector size.
#     # Additional --perf parameters for the LUKS2 encryption.
#     options:
#         - no_read_workqueue
#         - no_write_workqueue
---
apiVersion: v1alpha1
kind: ExtensionServiceConfig
name: tailscale # Name of the extension service.
# The environment for the extension service.
environment:
    - TS_ACCEPT_DNS=true
    - TS_AUTHKEY=tskey-client-kJbASYswNu11CNTRL-J9UgJwQekGYJj4x98ebtGYufcQD1ohcz
