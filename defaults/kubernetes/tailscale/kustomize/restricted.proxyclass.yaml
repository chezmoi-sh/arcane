# To adhere to security best practices, most clusters are configured with Admission
# Controllers in "restricted" mode.
# However, the Tailscale Operator requires modifying the pods' Security Context.
# Thus, it is essential to create a ProxyClass with the appropriate configurations to
# allow the operator to manage these Security Contexts.
---
apiVersion: tailscale.com/v1alpha1
kind: ProxyClass
metadata:
  name: restricted
spec:
  statefulSet:
    pod:
      tailscaleContainer:
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false # NOTE: required for the Tailscale container to create sockets
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
      securityContext:
        fsGroup: 25778
        runAsNonRoot: true
        runAsGroup: 25778
        runAsUser: 25778
---
# NOTE: The egress pod requires the ability to manage IP tables.
#       As a result, this pod must run as root. Ensure this configuration
#       is strictly limited to the required use case to minimize security risks.
apiVersion: tailscale.com/v1alpha1
kind: ProxyClass
metadata:
  name: restricted-egress
spec:
  statefulSet:
    pod:
      tailscaleContainer:
        resources:
          requests:
            cpu: 10m
            memory: 32Mi
          limits:
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false # NOTE: required for the Tailscale container to create sockets
          capabilities:
            add:
              - NET_ADMIN
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
