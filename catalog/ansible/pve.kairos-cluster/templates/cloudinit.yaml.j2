#cloud-config

# NOTE: the hostname is generated by Ansible, based on the `kairos_cloudinit_hostname_prefix` and the cluster name
# hostname: {{ kairos_cloudinit_hostname_prefix }}-{{ "{{" }} trunc 6 .MachineID }}
# WARN: until https://github.com/kairos-io/packages/pull/1178 is released, .MachineID is not available during the first bootstrap
stages:
    boot:
      - hostname: {{ kairos_cloudinit_hostname_prefix }}-{{ "{{" }} trunc 6 .MachineID }}

# Add users to the system. Users are added after groups are added.
users:
  - name: kairos
    lock_passwd: true
    groups: [admin]
{% if kairos_cloudinit_user_sshkeys %}
    ssh_authorized_keys:
      {{ kairos_cloudinit_user_sshkeys | to_nice_yaml | indent(width=6) }}
{% endif %}

# fail on cloud-init errors, defaults to false
strict: true

# The install block is to drive automatic installations without user interaction.
install:
  # Device for automated installs
  # This can be either a full device path (so /dev/sda) or you can use the udev facility to identify the disk by UUID, path, label, diskseq or id (/dev/disk/by-{uuid,label,path,diskseq})
  # Note that to use a disk by UUID or label, it has first to have that added from userspace, for example with `mkfs.ext4 -L LABEL -U UUID /dev/sda` otherwise disks dont come with UUID/label if they are empty
  device: "/dev/sda"
  # Reboot after installation
  reboot: true
  # Set to true when installing without Pairing
  auto: true

# Install additional packages on first boot (QEMU guest agent)
packages:
 - qemu-guest-agent

# Kustomization for the k3s installation
k3s:
  enabled: true
  {{ kairos_cloudinit_k3s | to_nice_yaml(indent=2) | indent(width=2) }}

# Configure Kairos community bundles for extending configurations and settings.
# These bundles can be used by Kairos core or derivative images to add cloud-config
# keywords and other customizations.
bundles:
  - targets:
{% for bundle in x_kairos_bundles_names %}
{% set bundle = lookup('ansible.builtin.vars', 'kairos_bundles_' + bundle) %}
{% if bundle.targets is defined %}
{% for target in bundle.targets %}
    - {{ target }}
{% endfor %}
{% endif %}
{% endfor %}

{% for bundle in x_kairos_bundles_names %}
{% set bundle_config = lookup('ansible.builtin.vars', 'kairos_bundles_' + bundle + '_config', default='') %}
{% if bundle_config %}
{{ bundle }}:
  {{ bundle_config | to_nice_yaml(indent=2) | indent(width=2) }}
{% endif %}
{% endfor %}
