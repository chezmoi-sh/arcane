---
# - Proxmox VE global configuration
# proxmox_host: # Hostname or IP address of the Proxmox VE node
# proxmox_user: # Username to authenticate with the Proxmox VE API
# proxmox_password: # Password to authenticate with the Proxmox VE API
# proxmox_token_id: # API token ID to authenticate with the Proxmox VE API
# proxmox_token_secret: # API token secret to authenticate with the Proxmox VE API
proxmox_iso_storage: local # Storage name where all ISO images are stored
proxmox_disk_storage: local-lvm # Storage name where all VM disks are stored

# - Proxmox VE VM configuration
kairos_cpu_type: host # Best performance for single node Proxme VE or if all Proxmox VE nodes have the same CPU
kairos_cpu_cores: 4 # 4 cores seems to be a good balance between performance and resource usage for most VMs
kairos_memory: 4096 # 4 GiB of memory is a good starting point for a Kubernetes node
kairos_memory_balloon: 0 # Disable memory ballooning by default
kairos_memory_shares: 1024 # Give the VM a fair share of memory by default
kairos_disk_size: 32 # 32 GiB of disk space is a good starting point for a Kubernetes node (image + data)
kairos_disk_enable_iothread: false # Disable I/O threads for better performance (the use of aio=threads is a legacy low-performance "aio" mechanism for QEMU|https://forum.proxmox.com/threads/proxmox-ve-7-2-benchmark-aio-native-io_uring-and-iothreads.116755/)
kairos_network_bridge: vmbr0 # Default bridge for most Proxmox VE installations
# kairos_network_mtu: # No MTU set by default
# kairos_network_vlan: # No VLAN set by default
kairos_start_on_boot: false # Do not start the VM automatically when the Proxmox VE node boots
# kairos_start_on_boot_order: # Not set by default
# kairos_vm_id: # Not set by default, the next available VM ID will be used

# - Kairos OS configuration
# renovate: datasource=github-releases lookupName=kairos-io/kairos
kairos_version: v3.2.4
kairos_distribution: debian-bookworm
# kairos_cluster_name: # Not set by default

# - Kairos community bundles configuration
kairos_bundles_suc: # System-Upgrade-Controller (https://github.com/rancher/system-upgrade-controller)
  description: General-purpose, Kubernetes-native upgrade controller (for nodes)
  url: https://github.com/kairos-io/community-bundles/tree/main/system-upgrade-controller
  targets:
    - run://quay.io/kairos/community-bundles:system-upgrade-controller_latest

# kairos_bundles_flux: # Flux CD (https://fluxcd.io/)
#   description: Open and extensible continuous delivery solution for Kubernetes.
#   url: https://github.com/kairos-io/community-bundles/tree/main/flux
#   targets:
#     - run://quay.io/kairos/community-bundles:flux_latest # bootstrap FluxCD
#     - run://ghcr.io/chezmoi-sh/kairos-bundles-dev/flux-sync:latest # sync FluxCD configuration
# kairos_bundles_flux_config: # Flux CD (https://fluxcd.io/)
#   git:
#     url: ...
#   ... read the bundle documentation for more details

# WARN: DO NOT CHANGE THE FOLLOWING VARIABLES UNLESS YOU KNOW WHAT YOU ARE DOING.
#       THESE VARIABLES ARE USED TO PREPARE ALL THE KAIROS CLOUD-INIT CONFIGURATION.
x_kairos_bundles_names: "{{ lookup('ansible.builtin.varnames', '^kairos_bundles_(?!.*_config$).+') | split(',') | map('regex_replace', 'kairos_bundles_', '') | list }}"

# - Kairos cloud-init configuration
kairos_cloudinit_hostname_prefix: krs
kairos_cloudinit_user_sshkeys: []

kairos_cloudinit_k3s:
  args:
    - --disable=traefik
